import "Player.deca"


class IO {
	void printHello() {
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println();
		println("â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â–„â–€â–€â–€â–„â–„â–„â–„â–„â–„â–„â–€â–€â–€â–„â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–’â–’â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–’â–’â–ˆâ”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–‘â–‘â–ˆâ–‘â–‘â–‘â–‘â–‘â–ˆâ–‘â–‘â–ˆâ”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”€â–„â–„â”€â”€â–ˆâ–‘â–‘â–‘â–€â–ˆâ–€â–‘â–‘â–‘â–ˆâ”€â”€â–„â–„â”€â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–‘â–‘â–ˆâ”€â–€â–„â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–„â–€â”€â–ˆâ–‘â–‘â–ˆâ”¼â”¼â”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–ˆâ–‘â–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–ˆâ–„â–ˆâ–ˆâ–‘â–ˆâ–ˆâ–„â–„â–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆâ–‘â–ˆâ–ˆâ”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–ˆâ–€â–ˆâ–ˆâ–‘â–ˆâ–ˆâ–€â–€â–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆâ–‘â–‘â–‘â–ˆâ–ˆâ–‘â–ˆâ–ˆâ”¼â”¼â”¼â”¼â”¼â”¼");
		println("â”¼â”¼â”¼â”¼â”¼â”¼â–ˆâ–ˆâ–‘â–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆâ–ˆâ–‘â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ”¼â”¼â”¼â”¼â”¼â”¼");
		println();
	}

	void printLink() {
		println("                          â€ â€ Â¥Â¥");
		println("                         â€ â€ â€ â€ Â¥Â¥");
		println("                        â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                       â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                      â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                     â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                    â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                   â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                  â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                 â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("                â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("               â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("              â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("             â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("            â€ â€ Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥â€ â€ Â¥Â¥");
		println("           â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ Â¥Â¥");
		println("          â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("         â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("        â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("       â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("      â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("     â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("    â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("   â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("  â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println(" â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥Â¯Â¯â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ â€ Â¥Â¥");
		println("Â¯Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥Â¥");
		println("            Â¶Â¶3333Â¶   Â¶Â¶Â¶Â¶Ã¿Ã¿Ã¿Ã¿Â¶Â¶Â¶Â¶   Â¶3333Â¶Â¶");
		println("            Â¶Â¶33333Â¶ Â¶Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Ã¿Â¶ Â¶33333Â¶Â¶");
		println("            Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Ã¿Ã¿Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Ã¿Ã¿Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶");
		println("            Â¶Â¶0000Â¶Â¶Â¶77777777777777Â¶Â¶Â¶0000Â¶Â¶");
		println("            Â¶Â¶0000Â¶Â¶7Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶7Â¶Â¶0000Â¶Â¶");
		println("             Â¶Â¶000Â¶Â¶Â¶aÂ¯Â¯Â¶Â¶aaaaÂ¶Â¶Â¯Â¯aÂ¶Â¶Â¶000Â¶Â¶");
		println("             Â¶Â¶000Â¶Â¶aaÂ¯Â¯Â¶Â¶aaaaÂ¶Â¶Â¯Â¯aaÂ¶Â¶000Â¶Â¶");
		println("              Â¶Â¶00Â¶Â¶aaaÂ¯Â¯aaaaaaÂ¯Â¯aaaÂ¶Â¶00Â¶Â¶");
		println("               Â¶Â¶000Â¶Â¶aaaaaaaaaaaaÂ¶Â¶000Â¶Â¶");
		println("                Â¶Â¶00Â¶Â¶Â¶Â¶aaaaaaaaÂ¶Â¶Â¶Â¶00Â¶Â¶");
		println("                 Â¶Â¶88888Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶88888Â¶Â¶");
		println("                  Â¶Â¶8855888888885588Â¶Â¶");
		println("                  Â¶Â¶8855555555555588Â¶Â¶");
		println("                Â¶Â¶11Â¶Â¶888855558888Â¶Â¶11Â¶Â¶");
		println("              Â¶Â¶88881111Â¶Â¶1111Â¶Â¶11118888Â¶Â¶");
		println("              Â¶Â¶Â¶Â¶Â¶Â¶8888111111118888Â¶Â¶Â¶Â¶Â¶Â¶");
		println("            Â¶Â¶Æ’Æ’Â§Â§Â¶Â¶Â¶Â¶Â¶Â¶88888888Â¶Â¶Â¶Â¶Â¶Â¶Â§Â§Æ’Æ’Â¶Â¶");
		println("            Â¶Â¶Æ’Æ’Æ’Æ’Â§Â§Â¶Â¶Â¯Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¯Â¶Â¶Â§Â§Æ’Æ’Æ’Æ’Â¶Â¶");
		println("            Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶Â¶              ");
	}

	boolean askVsWho() {
		int who;
		while (true) {
			print("Play against human (1) or IA (2): ");
			who = readInt();
			if (1 <= who && who <= 2) {
				return (who == 2);
			} else {
				println("Bad input, need to be 1 or 2.");
			}
		}

	}

	int askWhereToPlay(Grid grid) {
		boolean validNumber = false;
		int numBox;
		while (validNumber == false) {
			print("Where would you play (1 - 9): ");
			numBox = readInt();
			if (1 <= numBox && numBox <= 9) {
				if (grid.isBoxEmpty(numBox)) {
				validNumber = true;
				} else {
					println("This box is not empty!");
				}
			} else {
				println("Bad input, need to be between 1 and 9.");
			}
		}
		return numBox;
	}
}



{
	IO io = new IO();
	Grid grid = new Grid();
	Player player = new Player();
	IA ia = new IA();
	int numBox;
	boolean iaPlay;

	io.printHello();
	iaPlay = io.askVsWho();

	while (grid.isGameEnd() == 0) {
		print("Player ");
		println(player.num);
		grid.renderGrid();
		if (player.num == 1 || iaPlay == false) {
			numBox = io.askWhereToPlay(grid);
		} else {
			println("dans ia.play()");
			numBox = ia.play(grid);
		}

		grid.placeInBoxes(numBox, player.num);

		player.changePlayer();
		grid.boxDecrement();
	}

	grid.renderGrid();
	if (grid.isGameEnd() == -1) {
		println("EgalitÃ© ! ðŸ¤·");
	} else if (grid.isGameEnd() == 1 || iaPlay == false) {
		io.printLink();
		println("Bravo ! ðŸ¥³");
	} else {
		println("Cette IA est trop forte ! ðŸ¤–");
	}
}
