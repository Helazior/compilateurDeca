	TSTO #3
	BOV num0num0num0num0num0num0num0num0num0stack_num0num0num0num0num0num0num0num0num0overflow_error
	ADDSP #3
	LEA 1(GB), R1
	BSR classTableInit.Object
	LOAD #null, R1
	STORE R1, 1(GB)
; ------------------ Imports Main ---------------------
; ---------------- End Imports Main -------------------
	BRA classTableInit_end
; ---------------------------------------------------
;     Construction tables des methodes
; ---------------------------------------------------
; -------------------- Object -----------------------
classTableInit.Object:
	LOAD methodBody.Object.equals, R0
	STORE R0, 1(R1)
	RTS
; ------------------- Imports Fn ----------------------
; ----------------- End Imports Fn --------------------
classTableInit_end:
	TSTO #0
	BOV num0num0num0num0num0num0num0num0num0stack_num0num0num0num0num0num0num0num0num0overflow_error
; Main program
; ---------------------------------------------------
;           Beginning of main instructions:
; ---------------------------------------------------
; Start IF
; cond IF
; Start And
; Start And
; Start Or
; Start Or
	LOAD #0, R2
; !
; &&
	CMP #1, R2
	BEQ num0num0num0num0num0num0num0num0num0true_or_1
	LOAD #1, R2
; !
; !
; !
	CMP #1, R2
	BEQ num0num0num0num0num0num0num0num0num0true_or_1
	LOAD #0, R2
	BRA num0num0num0num0num0num0num0num0num0end_or_1
num0num0num0num0num0num0num0num0num0true_or_1:
	LOAD #1, R2
num0num0num0num0num0num0num0num0num0end_or_1:
; &&
	CMP #1, R2
	BEQ num0num0num0num0num0num0num0num0num0true_or_0
	LOAD #0, R2
; !
; !
	CMP #1, R2
	BEQ num0num0num0num0num0num0num0num0num0true_or_0
	LOAD #0, R2
	BRA num0num0num0num0num0num0num0num0num0end_or_0
num0num0num0num0num0num0num0num0num0true_or_0:
	LOAD #1, R2
num0num0num0num0num0num0num0num0num0end_or_0:
; !
; &&
	CMP #0, R2
	BEQ num0num0num0num0num0num0num0num0num0false_and_1
	LOAD #1, R2
	CMP #0, R2
	BEQ num0num0num0num0num0num0num0num0num0false_and_1
	LOAD #1, R2
	BRA num0num0num0num0num0num0num0num0num0end_and_1
num0num0num0num0num0num0num0num0num0false_and_1:
	LOAD #0, R2
num0num0num0num0num0num0num0num0num0end_and_1:
; &&
	CMP #0, R2
	BEQ num0num0num0num0num0num0num0num0num0false_and_0
	LOAD #1, R2
; !
	CMP #0, R2
	BEQ num0num0num0num0num0num0num0num0num0false_and_0
	LOAD #1, R2
	BRA num0num0num0num0num0num0num0num0num0end_and_0
num0num0num0num0num0num0num0num0num0false_and_0:
	LOAD #0, R2
num0num0num0num0num0num0num0num0num0end_and_0:
; !
; !
	LOAD R2, R1
	BEQ num0num0num0num0num0num0num0num0num0else_0
; IF then_body
	WSTR "hello"
	BRA num0num0num0num0num0num0num0num0num0end_if_0
num0num0num0num0num0num0num0num0num0else_0:
; IF num0num0num0num0num0num0num0num0num0else_body
; FI
num0num0num0num0num0num0num0num0num0end_if_0:
	HALT
; -------------------------------------------------
;                   Classe Object
; -------------------------------------------------
init.Object:
; ----------- Initialisation des champs de Object
	LOAD -2(LB), R1
	LEA 1(GB), R0
	STORE R0, 0(R1)
	RTS
methodBody.Object.equals:
; ----------- Code de la methode equals dans la classe Object
; Beginning of method instructions:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R1
	RTS
; ---------------------------------------------------
;                Messages d'erreur
; ---------------------------------------------------
num0num0num0num0num0num0num0num0num0stack_num0num0num0num0num0num0num0num0num0overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
	TSTO #3
	BOV num1num1num1num1num1num1num1num1num1stack_num1num1num1num1num1num1num1num1num1overflow_error
	ADDSP #3
	LEA 1(GB), R1
	BSR classTableInit.Object
	LOAD #null, R1
	STORE R1, 1(GB)
; ------------------ Imports Main ---------------------
; ---------------- End Imports Main -------------------
	BRA classTableInit_end
; ---------------------------------------------------
;     Construction tables des methodes
; ---------------------------------------------------
; -------------------- Object -----------------------
classTableInit.Object:
	LOAD methodBody.Object.equals, R0
	STORE R0, 1(R1)
	RTS
; ------------------- Imports Fn ----------------------
; ----------------- End Imports Fn --------------------
classTableInit_end:
	TSTO #1
	BOV num1num1num1num1num1num1num1num1num1stack_num1num1num1num1num1num1num1num1num1overflow_error
; Main program
	LOAD #50, R2
	STORE R2, 4(LB)
; ---------------------------------------------------
;           Beginning of main instructions:
; ---------------------------------------------------
; Start IF
; cond IF
	LOAD 4(LB), R2
	LOAD #50, R3
; <
	SUB R3, R2
	SGE R2
; !
	LOAD R2, R1
	BEQ num1num1num1num1num1num1num1num1num1else_0
; IF then_body
	WSTR "ok"
	BRA num1num1num1num1num1num1num1num1num1end_if_0
num1num1num1num1num1num1num1num1num1else_0:
; IF num1num1num1num1num1num1num1num1num1else_body
; FI
num1num1num1num1num1num1num1num1num1end_if_0:
	HALT
; -------------------------------------------------
;                   Classe Object
; -------------------------------------------------
init.Object:
; ----------- Initialisation des champs de Object
	LOAD -2(LB), R1
	LEA 1(GB), R0
	STORE R0, 0(R1)
	RTS
methodBody.Object.equals:
; ----------- Code de la methode equals dans la classe Object
; Beginning of method instructions:
	LOAD -2(LB), R0
	LOAD -3(LB), R1
	CMP R0, R1
	SEQ R1
	RTS
; ---------------------------------------------------
;                Messages d'erreur
; ---------------------------------------------------
num1num1num1num1num1num1num1num1num1stack_num1num1num1num1num1num1num1num1num1overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
