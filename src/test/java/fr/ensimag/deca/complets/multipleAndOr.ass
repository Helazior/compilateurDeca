; Main program
	TSTO #0
	BOV stack_overflow_error
; start main program
	ADDSP #0
; Beginning of main instructions:
; Start IF
; cond IF
; Start Or
; Start Or
	LOAD #0, R4
	LOAD R4, R3
; ||
	CMP #1, R3
	BEQ true_or_1
; Start And
; Start And
; Start And
	LOAD #1, R7
	LOAD R7, R6
; &&
	CMP #0, R6
	BEQ false_and_2
	LOAD #2, R7
	LOAD #3, R8
; +
	ADD R8, R7
	LOAD #1, R8
; +
	ADD R8, R7
	LOAD #2, R8
	LOAD #3, R9
; *
	MUL R9, R8
; ==
	CMP R8, R7
	SEQ R7
	LOAD R7, R6
	CMP #0, R6
	BEQ false_and_2
	LOAD #1, R6
	BRA end_and_2
false_and_2:
	LOAD #0, R6
end_and_2:
	LOAD R6, R5
; &&
	CMP #0, R5
	BEQ false_and_1
	LOAD #2, R6
	LOAD #2, R7
	LOAD #0, R8
; +
	ADD R8, R7
; !=
	CMP R7, R6
	SEQ R7
	LOAD #1, R6
	SUB R7, R6
; !
	LOAD #1, R7
	SUB R6, R7
	LOAD R7, R8
	LOAD R8, R5
	CMP #0, R5
	BEQ false_and_1
	LOAD #1, R5
	BRA end_and_1
false_and_1:
	LOAD #0, R5
end_and_1:
	LOAD R5, R4
; &&
	CMP #0, R4
	BEQ false_and_0
	LOAD #0, R5
; !
	LOAD #1, R6
	SUB R5, R6
	LOAD R6, R7
	LOAD R7, R4
	CMP #0, R4
	BEQ false_and_0
	LOAD #1, R4
	BRA end_and_0
false_and_0:
	LOAD #0, R4
end_and_0:
	LOAD R4, R3
	CMP #1, R3
	BEQ true_or_1
	LOAD #0, R3
	BRA end_or_1
true_or_1:
	LOAD #1, R3
end_or_1:
	LOAD R3, R2
; ||
	CMP #1, R2
	BEQ true_or_0
	LOAD #1, R3
; !
	LOAD #1, R4
	SUB R3, R4
	LOAD R4, R5
	LOAD R5, R2
	CMP #1, R2
	BEQ true_or_0
	LOAD #0, R2
	BRA end_or_0
true_or_0:
	LOAD #1, R2
end_or_0:
	LOAD R2, R1
	BEQ else_0
; IF then_body
	WSTR "Ã§a marche bien"
	BRA end_if_0
else_0:
; IF else_body
; FI
end_if_0:
	HALT
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
; end main program
