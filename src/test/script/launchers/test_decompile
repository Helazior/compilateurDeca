#!/bin/bash

# Ansi color code variables
red="\e[0;91m"
green="\e[0;92m"
white="\e[0;97m"
reset="\e[0;0m"

#Tout s'est bien passé
exit_value=0

function resultGeneration {
    path=$1
    file_src=$2
    file_name=$3

    if [[ $file_name != tmp_* ]]; then
        # TODO: vérifier le code de retour des commandes deca !!

        #generation du premier resultat
        res1_tmp=$path/tests/tmp_$file_name.deca
        res1_file=$path/generated/$file_name"1".deca
        decac -p -c $file_src > $res1_tmp

        #generation du deuxieme resultat
        res2_file=$path/generated/$file_name"2".deca
        decac -p -c $res1_tmp > $res2_file
        mv $res1_tmp $res1_file
        

        #On compare les fichiers
        if cmp -s $res1_file $res2_file; then
            echo -e "${green} ${bold} PASSED $file_name ${reset}"
            rm $res1_file
            rm $res2_file
        else
            exit_value=1
            echo -e "${red} ${bold} FAILED $file_name ${reset}"
        fi
    fi
}

# Récupération du dossier de travail
if [[ $# -eq 0 ]]; then
    folder_path=./src/test/deca/syntax/valid
else
    folder_path=$1
fi

# Creation de la hierarchie de dossier
mkdir -p $folder_path/provided
mkdir -p $folder_path/generated
mkdir -p $folder_path/tests

# Récupération des fichiers à tester
if [[ $# -le 1 ]]; then
    files="$(echo $folder_path/provided/*.deca) $(echo $folder_path/tests/*.deca)"
else
    files=$@
    files=${files#* } # On enlève le premier élément (qui est le dossier de travail)
fi

for file_src in $files; do

    #nom du fichier
    file_name=$(basename ${file_src%%".deca"})
    resultGeneration $folder_path $file_src $file_name
done

exit $exit_value
